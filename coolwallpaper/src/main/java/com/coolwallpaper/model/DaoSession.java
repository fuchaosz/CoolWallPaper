package com.coolwallpaper.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.coolwallpaper.model.Picture;
import com.coolwallpaper.model.Param;
import com.coolwallpaper.model.LocalPicture;
import com.coolwallpaper.model.LocalFavourite;

import com.coolwallpaper.model.PictureDao;
import com.coolwallpaper.model.ParamDao;
import com.coolwallpaper.model.LocalPictureDao;
import com.coolwallpaper.model.LocalFavouriteDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig pictureDaoConfig;
    private final DaoConfig paramDaoConfig;
    private final DaoConfig localPictureDaoConfig;
    private final DaoConfig localFavouriteDaoConfig;

    private final PictureDao pictureDao;
    private final ParamDao paramDao;
    private final LocalPictureDao localPictureDao;
    private final LocalFavouriteDao localFavouriteDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        pictureDaoConfig = daoConfigMap.get(PictureDao.class).clone();
        pictureDaoConfig.initIdentityScope(type);

        paramDaoConfig = daoConfigMap.get(ParamDao.class).clone();
        paramDaoConfig.initIdentityScope(type);

        localPictureDaoConfig = daoConfigMap.get(LocalPictureDao.class).clone();
        localPictureDaoConfig.initIdentityScope(type);

        localFavouriteDaoConfig = daoConfigMap.get(LocalFavouriteDao.class).clone();
        localFavouriteDaoConfig.initIdentityScope(type);

        pictureDao = new PictureDao(pictureDaoConfig, this);
        paramDao = new ParamDao(paramDaoConfig, this);
        localPictureDao = new LocalPictureDao(localPictureDaoConfig, this);
        localFavouriteDao = new LocalFavouriteDao(localFavouriteDaoConfig, this);

        registerDao(Picture.class, pictureDao);
        registerDao(Param.class, paramDao);
        registerDao(LocalPicture.class, localPictureDao);
        registerDao(LocalFavourite.class, localFavouriteDao);
    }
    
    public void clear() {
        pictureDaoConfig.getIdentityScope().clear();
        paramDaoConfig.getIdentityScope().clear();
        localPictureDaoConfig.getIdentityScope().clear();
        localFavouriteDaoConfig.getIdentityScope().clear();
    }

    public PictureDao getPictureDao() {
        return pictureDao;
    }

    public ParamDao getParamDao() {
        return paramDao;
    }

    public LocalPictureDao getLocalPictureDao() {
        return localPictureDao;
    }

    public LocalFavouriteDao getLocalFavouriteDao() {
        return localFavouriteDao;
    }

}
